/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    users: User;
    products: Product;
    'supporting-documents': SupportingDocument;
    services: Service;
    'product-categories': ProductCategory;
    subcategories: Subcategory;
    'test-submissions': TestSubmission;
    'test-kit-requests': TestKitRequest;
    'hardness-test-results': HardnessTestResult;
    'well-test-results': WellTestResult;
    banners: Banner;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    'supporting-documents': SupportingDocumentsSelect<false> | SupportingDocumentsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    'product-categories': ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    subcategories: SubcategoriesSelect<false> | SubcategoriesSelect<true>;
    'test-submissions': TestSubmissionsSelect<false> | TestSubmissionsSelect<true>;
    'test-kit-requests': TestKitRequestsSelect<false> | TestKitRequestsSelect<true>;
    'hardness-test-results': HardnessTestResultsSelect<false> | HardnessTestResultsSelect<true>;
    'well-test-results': WellTestResultsSelect<false> | WellTestResultsSelect<true>;
    banners: BannersSelect<false> | BannersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero?: {
    type?: ('none' | 'highImpact' | 'mediumImpact' | 'lowImpact') | null;
    slides?:
      | {
          image?: (number | null) | Media;
          video?: (number | null) | Media;
          title: string;
          titleHighlight?: string | null;
          titleEnd?: string | null;
          paragraph: string;
          lType?: ('support' | 'page' | 'noLink') | null;
          pageLink?: (number | null) | Page;
          supportLink?: (number | null) | SupportingDocument;
          linkLabel?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | CallToActionBlock
    | ContentBlock
    | FormBlock
    | TextBlock
    | TwoColumn
    | ServicesBlock
    | BlogFeed
    | ContactBlock
    | TextWithImageBlock
    | StatsBlock
    | BlockRow
    | ImageList
    | FaqBlock
    | VideoBlock
    | YoutubeBlock
    | TestKitForm
    | ReviewBlock
    | ImageGrid
    | SplitTextBlock
    | CostCalculatorBlock
    | WideTextBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supporting-documents".
 */
export interface SupportingDocument {
  id: number;
  title: string;
  association: number | ProductCategory;
  hero: {
    title: string;
    paragraph?: string | null;
    image: number | Media;
  };
  content: {
    content: (
      | CallToActionBlock
      | FaqBlock
      | ImageGrid
      | ImageList
      | StatsBlock
      | TextWithImageBlock
      | TwoColumn
      | VideoBlock
      | YoutubeBlock
      | SplitTextBlock
      | TestKitForm
      | HardnessTest
      | WellTestCalculator
    )[];
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-categories".
 */
export interface ProductCategory {
  id: number;
  title: string;
  excerpt: string;
  hero: {
    heroImage: number | Media;
  };
  content: {
    content: (
      | CallToActionBlock
      | FaqBlock
      | ImageGrid
      | ImageList
      | StatsBlock
      | TextWithImageBlock
      | TwoColumn
      | VideoBlock
      | YoutubeBlock
    )[];
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  title?: string | null;
  subtitle?: string | null;
  backgroundImage?: (number | null) | Media;
  lightMode?: boolean | null;
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  ctaType: 'link' | 'form';
  lType?: ('page' | 'support') | null;
  pageLink?: (number | null) | Page;
  supportLink?: (number | null) | SupportingDocument;
  linkLabel?: string | null;
  blocks?: FormBlock[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqBlock".
 */
export interface FaqBlock {
  title: string;
  questions?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  sideTitle: string;
  sideContent: string;
  linkLabel: string;
  linkURL: number | Page;
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqblock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageGrid".
 */
export interface ImageGrid {
  title: string;
  subtitle: string;
  gridItems?:
    | {
        theme?: ('light' | 'dark') | null;
        link: number | Page;
        backgroundImage?: (number | null) | Media;
        title: string;
        paragraph: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageList".
 */
export interface ImageList {
  images?:
    | {
        image: number | Media;
        title: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatsBlock".
 */
export interface StatsBlock {
  titleStart: string;
  titleHighlight: string;
  titleEnd: string;
  description: string;
  stats?:
    | {
        value?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'statsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextWithImageBlock".
 */
export interface TextWithImageBlock {
  darkmode?: boolean | null;
  title?: string | null;
  intro?: string | null;
  quote?: string | null;
  sideContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  image: number | Media;
  cropImage?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'textWithImageBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumn".
 */
export interface TwoColumn {
  title: string;
  mainContent?: string | null;
  contentleft: string;
  contentright: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'twoColumn';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoBlock".
 */
export interface VideoBlock {
  videoOnly?: boolean | null;
  enableGutter?: boolean | null;
  title?: string | null;
  subtitle?: string | null;
  contentleft?: string | null;
  link?: (number | null) | Page;
  linkLabel?: string | null;
  video: number | Media;
  preloadImage?: (number | null) | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'videoBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YoutubeBlock".
 */
export interface YoutubeBlock {
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  title?: string | null;
  youtubeEmbed?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'youtubeBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "splitTextBlock".
 */
export interface SplitTextBlock {
  items?:
    | {
        title: string;
        text: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        lType?: ('cms' | 'supporting') | null;
        CMSLink?: (number | null) | Page;
        supportingDocsLink?: (number | null) | SupportingDocument;
        image?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'splitTextBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestKitForm".
 */
export interface TestKitForm {
  id?: string | null;
  blockName?: string | null;
  blockType: 'testKitForm';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HardnessTest".
 */
export interface HardnessTest {
  title?: string | null;
  subtitle?: string | null;
  paragraph?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hardnessTest';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WellTestCalculator".
 */
export interface WellTestCalculator {
  id?: string | null;
  blockName?: string | null;
  blockType: 'wellTestCalculator';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock".
 */
export interface TextBlock {
  title?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'textBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock".
 */
export interface ServicesBlock {
  id?: string | null;
  blockName?: string | null;
  blockType: 'servicesBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogFeed".
 */
export interface BlogFeed {
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogFeed';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock".
 */
export interface ContactBlock {
  title: string;
  subtitleStart: string;
  subtitleHighlight: string;
  subtitleEnd: string;
  showRoomAddresses?:
    | {
        showRoomAddress: string;
        showRoomOpeningHours: string;
        id?: string | null;
      }[]
    | null;
  warehouseAddresses?:
    | {
        warehouseAddress: string;
        id?: string | null;
      }[]
    | null;
  phoneNumbers?:
    | {
        phoneNumber: string;
        id?: string | null;
      }[]
    | null;
  emailAddresses?:
    | {
        emailAddress: string;
        id?: string | null;
      }[]
    | null;
  blocks: FormBlock[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'contactBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockRow".
 */
export interface BlockRow {
  shiftUp?: boolean | null;
  items: {
    text: string;
    link: number | Page;
    linkLabel: string;
    icon: 'gallon' | 'glass' | 'droplet' | 'sharp' | 'bottle' | 'hand' | 'water';
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'blockRow';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReviewBlock".
 */
export interface ReviewBlock {
  title: string;
  subtitle?: string | null;
  reviews?:
    | {
        review: string;
        reviewer: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'reviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CostCalculatorBlock".
 */
export interface CostCalculatorBlock {
  title: string;
  subtitle: string;
  paragraph: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'costCalculatorBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WideTextBlock".
 */
export interface WideTextBlock {
  darkmode?: boolean | null;
  titleStart: string;
  titleHighlight?: string | null;
  titleEnd?: string | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  enableFeatures?: boolean | null;
  features?:
    | {
        title: string;
        description: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'wideTextBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  excerpt?: string | null;
  description?: string | null;
  featuredImage: number | Media;
  parent: number | ProductCategory;
  category: number | Subcategory;
  content: {
    header?: {
      mainFeatures?:
        | {
            description: string;
            id?: string | null;
          }[]
        | null;
    };
    features: {
      featuresTitle: string;
      featuresSubtitle: string;
      featuresList?:
        | {
            title: string;
            description: string;
            id?: string | null;
          }[]
        | null;
    };
    details: {
      detailsTitle: string;
      detailsImage: number | Media;
      details?:
        | {
            title: string;
            description: string;
            id?: string | null;
          }[]
        | null;
    };
    media?: {
      gallery?:
        | {
            image: number | Media;
            id?: string | null;
          }[]
        | null;
      brochure?: (number | null) | Media;
    };
    specs: {
      numberOfUsers: number;
      sku?: string | null;
    };
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  video?: {
    video?: (number | null) | Media;
    preloadImage?: (number | null) | Media;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories".
 */
export interface Subcategory {
  id: number;
  title: string;
  excerpt?: string | null;
  category: number | ProductCategory;
  video?: (number | null) | Media;
  preloadImage?: (number | null) | Media;
  hero?: {
    heroType?: ('image' | 'video') | null;
    heroVideo?: (number | null) | Media;
    heroImage?: (number | null) | Media;
  };
  content: {
    content: (
      | CallToActionBlock
      | FaqBlock
      | ImageGrid
      | ImageList
      | StatsBlock
      | TextWithImageBlock
      | TwoColumn
      | VideoBlock
      | YoutubeBlock
      | ProductsList
      | WideTextBlock
    )[];
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productsList".
 */
export interface ProductsList {
  title: string;
  subcategory: number | Subcategory;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productsList';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: number;
  title: string;
  intro?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image: number | Media;
  features?:
    | {
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "test-submissions".
 */
export interface TestSubmission {
  id: number;
  uuid?: string | null;
  name: string;
  email: string;
  image: number | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "test-kit-requests".
 */
export interface TestKitRequest {
  id: number;
  name: string;
  email: string;
  telephone: string;
  address: string;
  message?: string | null;
  sent?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hardness-test-results".
 */
export interface HardnessTestResult {
  id: number;
  name: string;
  email: string;
  telephone: string;
  hardness: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "well-test-results".
 */
export interface WellTestResult {
  id: number;
  fullname: string;
  email: string;
  phone?: string | null;
  aluminium: number;
  ammonium: number;
  coliformsTotal: number;
  colourApparent: number;
  conductivity: number;
  eColi: number;
  hardnessTotal: number;
  iron: number;
  manganese: number;
  nitrite: number;
  pH: number;
  tbc22c: number;
  turbidity: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners".
 */
export interface Banner {
  id: number;
  title: string;
  message: string;
  linkText: string;
  linkUrl: string;
  displayDelay: number;
  isActive: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'supporting-documents';
        value: number | SupportingDocument;
      } | null)
    | ({
        relationTo: 'services';
        value: number | Service;
      } | null)
    | ({
        relationTo: 'product-categories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'subcategories';
        value: number | Subcategory;
      } | null)
    | ({
        relationTo: 'test-submissions';
        value: number | TestSubmission;
      } | null)
    | ({
        relationTo: 'test-kit-requests';
        value: number | TestKitRequest;
      } | null)
    | ({
        relationTo: 'hardness-test-results';
        value: number | HardnessTestResult;
      } | null)
    | ({
        relationTo: 'well-test-results';
        value: number | WellTestResult;
      } | null)
    | ({
        relationTo: 'banners';
        value: number | Banner;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        slides?:
          | T
          | {
              image?: T;
              video?: T;
              title?: T;
              titleHighlight?: T;
              titleEnd?: T;
              paragraph?: T;
              lType?: T;
              pageLink?: T;
              supportLink?: T;
              linkLabel?: T;
              id?: T;
            };
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        textBlock?: T | TextBlockSelect<T>;
        twoColumn?: T | TwoColumnSelect<T>;
        servicesBlock?: T | ServicesBlockSelect<T>;
        blogFeed?: T | BlogFeedSelect<T>;
        contactBlock?: T | ContactBlockSelect<T>;
        textWithImageBlock?: T | TextWithImageBlockSelect<T>;
        statsBlock?: T | StatsBlockSelect<T>;
        blockRow?: T | BlockRowSelect<T>;
        imageList?: T | ImageListSelect<T>;
        faqblock?: T | FaqBlockSelect<T>;
        videoBlock?: T | VideoBlockSelect<T>;
        youtubeBlock?: T | YoutubeBlockSelect<T>;
        testKitForm?: T | TestKitFormSelect<T>;
        reviewBlock?: T | ReviewBlockSelect<T>;
        imageGrid?: T | ImageGridSelect<T>;
        splitTextBlock?: T | SplitTextBlockSelect<T>;
        costCalculatorBlock?: T | CostCalculatorBlockSelect<T>;
        wideTextBlock?: T | WideTextBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  backgroundImage?: T;
  lightMode?: T;
  richText?: T;
  ctaType?: T;
  lType?: T;
  pageLink?: T;
  supportLink?: T;
  linkLabel?: T;
  blocks?:
    | T
    | {
        formBlock?: T | FormBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextBlock_select".
 */
export interface TextBlockSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TwoColumn_select".
 */
export interface TwoColumnSelect<T extends boolean = true> {
  title?: T;
  mainContent?: T;
  contentleft?: T;
  contentright?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock_select".
 */
export interface ServicesBlockSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogFeed_select".
 */
export interface BlogFeedSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock_select".
 */
export interface ContactBlockSelect<T extends boolean = true> {
  title?: T;
  subtitleStart?: T;
  subtitleHighlight?: T;
  subtitleEnd?: T;
  showRoomAddresses?:
    | T
    | {
        showRoomAddress?: T;
        showRoomOpeningHours?: T;
        id?: T;
      };
  warehouseAddresses?:
    | T
    | {
        warehouseAddress?: T;
        id?: T;
      };
  phoneNumbers?:
    | T
    | {
        phoneNumber?: T;
        id?: T;
      };
  emailAddresses?:
    | T
    | {
        emailAddress?: T;
        id?: T;
      };
  blocks?:
    | T
    | {
        formBlock?: T | FormBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TextWithImageBlock_select".
 */
export interface TextWithImageBlockSelect<T extends boolean = true> {
  darkmode?: T;
  title?: T;
  intro?: T;
  quote?: T;
  sideContent?: T;
  content?: T;
  image?: T;
  cropImage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatsBlock_select".
 */
export interface StatsBlockSelect<T extends boolean = true> {
  titleStart?: T;
  titleHighlight?: T;
  titleEnd?: T;
  description?: T;
  stats?:
    | T
    | {
        value?: T;
        title?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlockRow_select".
 */
export interface BlockRowSelect<T extends boolean = true> {
  shiftUp?: T;
  items?:
    | T
    | {
        text?: T;
        link?: T;
        linkLabel?: T;
        icon?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageList_select".
 */
export interface ImageListSelect<T extends boolean = true> {
  images?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqBlock_select".
 */
export interface FaqBlockSelect<T extends boolean = true> {
  title?: T;
  questions?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  sideTitle?: T;
  sideContent?: T;
  linkLabel?: T;
  linkURL?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "VideoBlock_select".
 */
export interface VideoBlockSelect<T extends boolean = true> {
  videoOnly?: T;
  enableGutter?: T;
  title?: T;
  subtitle?: T;
  contentleft?: T;
  link?: T;
  linkLabel?: T;
  video?: T;
  preloadImage?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YoutubeBlock_select".
 */
export interface YoutubeBlockSelect<T extends boolean = true> {
  content?: T;
  title?: T;
  youtubeEmbed?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestKitForm_select".
 */
export interface TestKitFormSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ReviewBlock_select".
 */
export interface ReviewBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  reviews?:
    | T
    | {
        review?: T;
        reviewer?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageGrid_select".
 */
export interface ImageGridSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  gridItems?:
    | T
    | {
        theme?: T;
        link?: T;
        backgroundImage?: T;
        title?: T;
        paragraph?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "splitTextBlock_select".
 */
export interface SplitTextBlockSelect<T extends boolean = true> {
  items?:
    | T
    | {
        title?: T;
        text?: T;
        lType?: T;
        CMSLink?: T;
        supportingDocsLink?: T;
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CostCalculatorBlock_select".
 */
export interface CostCalculatorBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  paragraph?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WideTextBlock_select".
 */
export interface WideTextBlockSelect<T extends boolean = true> {
  darkmode?: T;
  titleStart?: T;
  titleHighlight?: T;
  titleEnd?: T;
  description?: T;
  enableFeatures?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  description?: T;
  featuredImage?: T;
  parent?: T;
  category?: T;
  content?:
    | T
    | {
        header?:
          | T
          | {
              mainFeatures?:
                | T
                | {
                    description?: T;
                    id?: T;
                  };
            };
        features?:
          | T
          | {
              featuresTitle?: T;
              featuresSubtitle?: T;
              featuresList?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
            };
        details?:
          | T
          | {
              detailsTitle?: T;
              detailsImage?: T;
              details?:
                | T
                | {
                    title?: T;
                    description?: T;
                    id?: T;
                  };
            };
        media?:
          | T
          | {
              gallery?:
                | T
                | {
                    image?: T;
                    id?: T;
                  };
              brochure?: T;
            };
        specs?:
          | T
          | {
              numberOfUsers?: T;
              sku?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  video?:
    | T
    | {
        video?: T;
        preloadImage?: T;
      };
  slug?: T;
  slugLock?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supporting-documents_select".
 */
export interface SupportingDocumentsSelect<T extends boolean = true> {
  title?: T;
  association?: T;
  hero?:
    | T
    | {
        title?: T;
        paragraph?: T;
        image?: T;
      };
  content?:
    | T
    | {
        content?:
          | T
          | {
              cta?: T | CallToActionBlockSelect<T>;
              faqblock?: T | FaqBlockSelect<T>;
              imageGrid?: T | ImageGridSelect<T>;
              imageList?: T | ImageListSelect<T>;
              statsBlock?: T | StatsBlockSelect<T>;
              textWithImageBlock?: T | TextWithImageBlockSelect<T>;
              twoColumn?: T | TwoColumnSelect<T>;
              videoBlock?: T | VideoBlockSelect<T>;
              youtubeBlock?: T | YoutubeBlockSelect<T>;
              splitTextBlock?: T | SplitTextBlockSelect<T>;
              testKitForm?: T | TestKitFormSelect<T>;
              hardnessTest?: T | HardnessTestSelect<T>;
              wellTestCalculator?: T | WellTestCalculatorSelect<T>;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  createdAt?: T;
  updatedAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HardnessTest_select".
 */
export interface HardnessTestSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  paragraph?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WellTestCalculator_select".
 */
export interface WellTestCalculatorSelect<T extends boolean = true> {
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  intro?: T;
  description?: T;
  image?: T;
  features?:
    | T
    | {
        description?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-categories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  hero?:
    | T
    | {
        heroImage?: T;
      };
  content?:
    | T
    | {
        content?:
          | T
          | {
              cta?: T | CallToActionBlockSelect<T>;
              faqblock?: T | FaqBlockSelect<T>;
              imageGrid?: T | ImageGridSelect<T>;
              imageList?: T | ImageListSelect<T>;
              statsBlock?: T | StatsBlockSelect<T>;
              textWithImageBlock?: T | TextWithImageBlockSelect<T>;
              twoColumn?: T | TwoColumnSelect<T>;
              videoBlock?: T | VideoBlockSelect<T>;
              youtubeBlock?: T | YoutubeBlockSelect<T>;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subcategories_select".
 */
export interface SubcategoriesSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  category?: T;
  video?: T;
  preloadImage?: T;
  hero?:
    | T
    | {
        heroType?: T;
        heroVideo?: T;
        heroImage?: T;
      };
  content?:
    | T
    | {
        content?:
          | T
          | {
              cta?: T | CallToActionBlockSelect<T>;
              faqblock?: T | FaqBlockSelect<T>;
              imageGrid?: T | ImageGridSelect<T>;
              imageList?: T | ImageListSelect<T>;
              statsBlock?: T | StatsBlockSelect<T>;
              textWithImageBlock?: T | TextWithImageBlockSelect<T>;
              twoColumn?: T | TwoColumnSelect<T>;
              videoBlock?: T | VideoBlockSelect<T>;
              youtubeBlock?: T | YoutubeBlockSelect<T>;
              productsList?: T | ProductsListSelect<T>;
              wideTextBlock?: T | WideTextBlockSelect<T>;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "productsList_select".
 */
export interface ProductsListSelect<T extends boolean = true> {
  title?: T;
  subcategory?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "test-submissions_select".
 */
export interface TestSubmissionsSelect<T extends boolean = true> {
  uuid?: T;
  name?: T;
  email?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "test-kit-requests_select".
 */
export interface TestKitRequestsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  telephone?: T;
  address?: T;
  message?: T;
  sent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hardness-test-results_select".
 */
export interface HardnessTestResultsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  telephone?: T;
  hardness?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "well-test-results_select".
 */
export interface WellTestResultsSelect<T extends boolean = true> {
  fullname?: T;
  email?: T;
  phone?: T;
  aluminium?: T;
  ammonium?: T;
  coliformsTotal?: T;
  colourApparent?: T;
  conductivity?: T;
  eColi?: T;
  hardnessTotal?: T;
  iron?: T;
  manganese?: T;
  nitrite?: T;
  pH?: T;
  tbc22c?: T;
  turbidity?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners_select".
 */
export interface BannersSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  linkText?: T;
  linkUrl?: T;
  displayDelay?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: number | Page;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Main navigation links in the footer
   */
  siteNavigation?:
    | {
        link: number | Page;
        id?: string | null;
      }[]
    | null;
  blurb: string;
  /**
   * Secondary links section in the footer
   */
  usefulLinks?:
    | {
        label: string;
        lType?: ('cms' | 'supporting') | null;
        CMSLink?: (number | null) | Page;
        supportingDocsLink?: (number | null) | SupportingDocument;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  siteNavigation?:
    | T
    | {
        link?: T;
        id?: T;
      };
  blurb?: T;
  usefulLinks?:
    | T
    | {
        label?: T;
        lType?: T;
        CMSLink?: T;
        supportingDocsLink?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}